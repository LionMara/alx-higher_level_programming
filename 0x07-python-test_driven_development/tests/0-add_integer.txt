=====================================
Tests for the 0-add_integer.py module
=====================================

This module is simple.
It adds two integers

the two values must be float or integers
Or a TypeError is passed.

add_integer = __import__('0-add_integer').add_integer.

``add_integers`` is expected to add the ints.

::

Ints - positive, one is negative, all are negative
==================================================

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(0)
	98
	>>> add_integer(-1)
	97
	add_integer(11.5)
	109


Floats
======
	>>> add_integer(2.0, 3)
	5
	>>> add_integer(2.0, 3.0)
	5
OverflowError
============
	>>> add_integer(2.0*1000, 34e3**10000)
	Traceback (most recent call last):
	...

NaN ValueError
==============
	>>> add_integer(float('NaN')), 2.0)
	Traceback (most recent call last):
	...


TypeError
=========
	>>> add_integer('a', 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(3, 'b')
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(complex(5))
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer([])
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer({})
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(set())
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer("")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Additions using  two inputs
====================================
	>>> add_integer(10, 10)
	20
	>>> add_integer(10.1, 10)
	20
	>>> add_integer(10.2, 10.2)
	20
	>>> add_integer(10, complex(10))
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer(10, [])
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer(10, {})
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer(10, set())
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
	>>> add_integer(10, '')
	Traceback (most recent call last):
	...
	TypeError: b must be an integer
